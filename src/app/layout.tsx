import type { Metadata } from "next";
import "../../public/assets/css/google_fonts.css"
import "../../public/assets/css/plugins/swiper-bundle.min.css";
import "../../public/assets/css/plugins/glightbox.min.css";
import "../../public/assets/css/vendor/bootstrap.min.css";
import "../../public/assets/css/style.css";
// import { Inter } from "next/font/google";
// import "./globals.css";
import Head from "next/head";
import Script from "next/script";

// const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Grosser",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <Head>
        <meta name="description" content="Morden Bootstrap HTML5 Template" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {/* <link
          href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Lora:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
          rel="stylesheet"
        /> */}

      </Head>
      <body>
        <Loader isLoading={false} />
        {children}

        <ScrollToTop />
        {/* //! this(glightbox) is causing the hydration error for some reason, */}
        {/* //? More to look into it*/}
        <Script src="/assets/js/plugins/glightbox.min.js" strategy="lazyOnload" />
        <Script src="/assets/js/vendor/popper.js" strategy="lazyOnload" />
        <Script src="/assets/js/vendor/bootstrap.min.js" strategy="lazyOnload" />
        <Script src="/assets/js/plugins/swiper-bundle.min.js" />
        <Script src="/assets/js/script.js" strategy="lazyOnload" />
      </body>
    </html>
  );
}

function ScrollToTop() {
  return (
    <button id="scroll__top"><svg xmlns="http://www.w3.org/2000/svg" className="ionicon" viewBox="0 0 512 512">
      <path fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="48"
        d="M112 244l144-144 144 144M256 120v292" />
    </svg></button>
  )
}

type LoadingType = {
  isLoading: boolean
}

function Loader({ isLoading }: LoadingType) {
  return (
    <>
      {/* Start preloader */}
      {
        isLoading &&
        <div id="preloader">
          <div id="ctn-preloader" className="ctn-preloader">
            <div className="animation-preloader">
              <div className="spinner" />
              <div className="txt-loading">
                <span data-text-preloader="L" className="letters-loading">
                  L
                </span>
                <span data-text-preloader="O" className="letters-loading">
                  O
                </span>
                <span data-text-preloader="A" className="letters-loading">
                  A
                </span>
                <span data-text-preloader="D" className="letters-loading">
                  D
                </span>
                <span data-text-preloader="I" className="letters-loading">
                  I
                </span>
                <span data-text-preloader="N" className="letters-loading">
                  N
                </span>
                <span data-text-preloader="G" className="letters-loading">
                  G
                </span>
              </div>
            </div>
            <div className="loader-section section-left" />
            <div className="loader-section section-right" />
          </div>
        </div>
      }
      {/* End preloader */}
    </>
  )
}